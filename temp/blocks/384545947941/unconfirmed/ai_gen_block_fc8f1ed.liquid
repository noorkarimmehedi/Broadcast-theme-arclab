{% doc %}
  @prompt
    create a modern announce bar for me
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-announcement-bar-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    color: {{ block.settings.text_color }};
    padding: {{ block.settings.padding }}px 20px;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .ai-announcement-bar-container-{{ ai_gen_id }} {
    max-width: 1400px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    position: relative;
  }

  .ai-announcement-bar-icon-{{ ai_gen_id }} {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-announcement-bar-icon-{{ ai_gen_id }} svg {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    stroke: {{ block.settings.text_color }};
  }

  .ai-announcement-bar-content-{{ ai_gen_id }} {
    font-size: {{ block.settings.font_size }}px;
    line-height: 1.4;
    font-weight: {{ block.settings.font_weight }};
    letter-spacing: {{ block.settings.letter_spacing }}px;
  }

  .ai-announcement-bar-content-{{ ai_gen_id }} a {
    color: {{ block.settings.link_color }};
    text-decoration: underline;
    text-underline-offset: 2px;
  }

  .ai-announcement-bar-content-{{ ai_gen_id }} a:hover {
    opacity: 0.8;
  }

  .ai-announcement-bar-close-{{ ai_gen_id }} {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.7;
    transition: opacity 0.2s ease;
  }

  .ai-announcement-bar-close-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-announcement-bar-close-{{ ai_gen_id }} svg {
    width: 16px;
    height: 16px;
    stroke: {{ block.settings.text_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-announcement-bar-{{ ai_gen_id }} {
      padding: {{ block.settings.padding | times: 0.8 }}px 16px;
    }

    .ai-announcement-bar-content-{{ ai_gen_id }} {
      font-size: {{ block.settings.font_size | times: 0.9 }}px;
    }

    .ai-announcement-bar-icon-{{ ai_gen_id }} svg {
      width: {{ block.settings.icon_size | times: 0.85 }}px;
      height: {{ block.settings.icon_size | times: 0.85 }}px;
    }

    .ai-announcement-bar-close-{{ ai_gen_id }} {
      right: 12px;
    }
  }
{% endstyle %}

<announcement-bar-{{ ai_gen_id }}
  class="ai-announcement-bar-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
  data-bar-id="{{ ai_gen_id }}"
>
  <div class="ai-announcement-bar-container-{{ ai_gen_id }}">
    {% if block.settings.show_icon %}
      <div class="ai-announcement-bar-icon-{{ ai_gen_id }}">
        {% case block.settings.icon_type %}
          {% when 'megaphone' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="m3 11 18-5v12L3 14v-3z"></path>
              <path d="M11.6 16.8a3 3 0 1 1-5.8-1.6"></path>
            </svg>
          {% when 'gift' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="20 12 20 22 4 22 4 12"></polyline>
              <rect x="2" y="7" width="20" height="5"></rect>
              <line x1="12" y1="22" x2="12" y2="7"></line>
              <path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path>
              <path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>
            </svg>
          {% when 'tag' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path>
              <line x1="7" y1="7" x2="7.01" y2="7"></line>
            </svg>
          {% when 'truck' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="1" y="3" width="15" height="13"></rect>
              <polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon>
              <circle cx="5.5" cy="18.5" r="2.5"></circle>
              <circle cx="18.5" cy="18.5" r="2.5"></circle>
            </svg>
          {% when 'star' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
            </svg>
          {% when 'info' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="16" x2="12" y2="12"></line>
              <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
        {% endcase %}
      </div>
    {% endif %}

    <div class="ai-announcement-bar-content-{{ ai_gen_id }}">
      {{ block.settings.message }}
    </div>

    {% if block.settings.show_close_button %}
      <button
        class="ai-announcement-bar-close-{{ ai_gen_id }}"
        aria-label="Close announcement"
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    {% endif %}
  </div>
</announcement-bar-{{ ai_gen_id }}>

<script>
  (function() {
    class AnnouncementBar{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.barId = this.dataset.barId;
        this.storageKey = 'announcement-bar-closed-' + this.barId;
      }

      connectedCallback() {
        if (this.isClosed()) {
          this.style.display = 'none';
          return;
        }

        const closeButton = this.querySelector('.ai-announcement-bar-close-{{ ai_gen_id }}');
        if (closeButton) {
          closeButton.addEventListener('click', () => this.closeBar());
        }
      }

      closeBar() {
        this.style.display = 'none';
        this.setClosed();
      }

      isClosed() {
        try {
          return localStorage.getItem(this.storageKey) === 'true';
        } catch (e) {
          return false;
        }
      }

      setClosed() {
        try {
          localStorage.setItem(this.storageKey, 'true');
        } catch (e) {
        }
      }
    }

    customElements.define('announcement-bar-{{ ai_gen_id }}', AnnouncementBar{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Announcement bar",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "richtext",
      "id": "message",
      "label": "Message",
      "default": "<p>Free shipping on orders over $50 ðŸŽ‰</p>"
    },
    {
      "type": "header",
      "content": "Icon"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "select",
      "id": "icon_type",
      "label": "Icon type",
      "options": [
        {
          "value": "megaphone",
          "label": "Megaphone"
        },
        {
          "value": "gift",
          "label": "Gift"
        },
        {
          "value": "tag",
          "label": "Tag"
        },
        {
          "value": "truck",
          "label": "Truck"
        },
        {
          "value": "star",
          "label": "Star"
        },
        {
          "value": "info",
          "label": "Info"
        }
      ],
      "default": "megaphone"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 20
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "link_color",
      "label": "Link",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 12
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 11,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semibold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "range",
      "id": "letter_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "px",
      "label": "Letter spacing",
      "default": 0.5
    },
    {
      "type": "header",
      "content": "Settings"
    },
    {
      "type": "checkbox",
      "id": "show_close_button",
      "label": "Show close button",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Announcement bar"
    }
  ]
}
{% endschema %}
