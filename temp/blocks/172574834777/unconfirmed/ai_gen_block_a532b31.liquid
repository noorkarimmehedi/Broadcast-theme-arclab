{% doc %}
  @prompt
    create a announce bar with color customizable and link 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-announce-bar-{{ ai_gen_id }} {
    width: 100%;
    background-color: {{ block.settings.background_color }};
    color: {{ block.settings.text_color }};
    padding: {{ block.settings.padding_vertical }}px 20px;
    text-align: {{ block.settings.text_alignment }};
    position: relative;
    z-index: 10;
  }

  .ai-announce-bar-content-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    {% if block.settings.text_alignment == 'center' %}
      justify-content: center;
    {% elsif block.settings.text_alignment == 'right' %}
      justify-content: flex-end;
    {% else %}
      justify-content: flex-start;
    {% endif %}
    gap: 12px;
    position: relative;
  }

  .ai-announce-bar-text-{{ ai_gen_id }} {
    font-size: {{ block.settings.font_size }}px;
    font-weight: {{ block.settings.font_weight }};
    line-height: 1.4;
    margin: 0;
  }

  .ai-announce-bar-link-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 12px;
    width: 100%;
  }

  .ai-announce-bar-link-{{ ai_gen_id }}:hover {
    color: {{ block.settings.text_hover_color }};
  }

  .ai-announce-bar-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    flex-shrink: 0;
  }

  .ai-announce-bar-close-{{ ai_gen_id }} {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: {{ block.settings.text_color }};
    cursor: pointer;
    padding: 8px;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .ai-announce-bar-close-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-announce-bar-close-{{ ai_gen_id }} svg {
    width: 16px;
    height: 16px;
  }

  {% if block.settings.show_close_button == false %}
    .ai-announce-bar-close-{{ ai_gen_id }} {
      display: none;
    }
  {% endif %}

  @media screen and (max-width: 749px) {
    .ai-announce-bar-{{ ai_gen_id }} {
      padding: {{ block.settings.padding_vertical | times: 0.8 }}px 16px;
    }

    .ai-announce-bar-text-{{ ai_gen_id }} {
      font-size: {{ block.settings.font_size | times: 0.9 }}px;
    }

    .ai-announce-bar-content-{{ ai_gen_id }} {
      gap: 8px;
    }

    .ai-announce-bar-icon-{{ ai_gen_id }} {
      width: {{ block.settings.icon_size | times: 0.8 }}px;
      height: {{ block.settings.icon_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<announce-bar-{{ ai_gen_id }}
  class="ai-announce-bar-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
  data-announce-bar
>
  <div class="ai-announce-bar-content-{{ ai_gen_id }}">
    {% if block.settings.announcement_link != blank %}
      <a href="{{ block.settings.announcement_link }}" class="ai-announce-bar-link-{{ ai_gen_id }}">
    {% endif %}

    {% if block.settings.show_icon %}
      <div class="ai-announce-bar-icon-{{ ai_gen_id }}">
        {% case block.settings.icon_type %}
          {% when 'megaphone' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="m3 11 18-5v12L3 14v-3z"></path>
              <path d="M11.6 16.8a3 3 0 1 1-5.8-1.6"></path>
            </svg>
          {% when 'bell' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
              <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"></path>
            </svg>
          {% when 'gift' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="20,12 20,22 4,22 4,12"></polyline>
              <rect x="2" y="7" width="20" height="5"></rect>
              <line x1="12" y1="22" x2="12" y2="7"></line>
              <path d="M12,7 C12,7 9.5,4 6,4 C4.5,4 3,5.5 3,7 C3,8.5 4.5,10 6,10 L12,10"></path>
              <path d="M12,7 C12,7 14.5,4 18,4 C19.5,4 21,5.5 21,7 C21,8.5 19.5,10 18,10 L12,10"></path>
            </svg>
          {% when 'star' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26"></polygon>
            </svg>
          {% when 'truck' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="1" y="3" width="15" height="13"></rect>
              <polygon points="16,8 20,8 23,11 23,16 16,16"></polygon>
              <circle cx="5.5" cy="18.5" r="2.5"></circle>
              <circle cx="18.5" cy="18.5" r="2.5"></circle>
            </svg>
          {% when 'info' %}
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="16" x2="12" y2="12"></line>
              <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
        {% endcase %}
      </div>
    {% endif %}

    {% if block.settings.announcement_text != blank %}
      <p class="ai-announce-bar-text-{{ ai_gen_id }}">{{ block.settings.announcement_text }}</p>
    {% else %}
      <p class="ai-announce-bar-text-{{ ai_gen_id }}">Add your announcement text here</p>
    {% endif %}

    {% if block.settings.announcement_link != blank %}
      </a>
    {% endif %}

    {% if block.settings.show_close_button %}
      <button class="ai-announce-bar-close-{{ ai_gen_id }}" aria-label="Close announcement">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    {% endif %}
  </div>
</announce-bar-{{ ai_gen_id }}>

<script>
  (function() {
    class AnnounceBar{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.closeButton = this.querySelector('.ai-announce-bar-close-{{ ai_gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        if (this.closeButton) {
          this.closeButton.addEventListener('click', () => {
            this.style.display = 'none';
            
            sessionStorage.setItem('announce-bar-{{ ai_gen_id }}-closed', 'true');
          });
        }

        if (sessionStorage.getItem('announce-bar-{{ ai_gen_id }}-closed') === 'true') {
          this.style.display = 'none';
        }
      }
    }

    customElements.define('announce-bar-{{ ai_gen_id }}', AnnounceBar{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Announcement bar",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "textarea",
      "id": "announcement_text",
      "label": "Announcement text",
      "default": "Free shipping on orders over $50!"
    },
    {
      "type": "url",
      "id": "announcement_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Icon"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "select",
      "id": "icon_type",
      "label": "Icon type",
      "options": [
        {
          "value": "megaphone",
          "label": "Megaphone"
        },
        {
          "value": "bell",
          "label": "Bell"
        },
        {
          "value": "gift",
          "label": "Gift"
        },
        {
          "value": "star",
          "label": "Star"
        },
        {
          "value": "truck",
          "label": "Truck"
        },
        {
          "value": "info",
          "label": "Info"
        }
      ],
      "default": "megaphone"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 20
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "font_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "range",
      "id": "padding_vertical",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Vertical padding",
      "default": 12
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_hover_color",
      "label": "Text hover color",
      "default": "#cccccc"
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "checkbox",
      "id": "show_close_button",
      "label": "Show close button",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Announcement bar"
    }
  ]
}
{% endschema %}